{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\sudoku_solver\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isSafe = (grid, row, col, num) => {\n  if (grid[row][col] !== 0) return false;\n  for (let i = 0; i < 9; i++) {\n    if (grid[row][i] === num || grid[i][col] === num) return false;\n    const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n    const boxCol = 3 * Math.floor(col / 3) + i % 3;\n    if (grid[boxRow][boxCol] === num) return false;\n  }\n  return true;\n};\nconst solveSudoku = grid => {\n  const isValid = (row, col, num) => {\n    for (let i = 0; i < 9; i++) {\n      if (grid[row][i] === num || grid[i][col] === num) return false;\n      const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n      const boxCol = 3 * Math.floor(col / 3) + i % 3;\n      if (grid[boxRow][boxCol] === num) return false;\n    }\n    return true;\n  };\n  const solve = () => {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (grid[row][col] === 0) {\n          for (let num = 1; num <= 9; num++) {\n            if (isValid(row, col, num)) {\n              grid[row][col] = num;\n              if (solve()) return true;\n              grid[row][col] = 0;\n            }\n          }\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  return solve() ? grid : null;\n};\nconst generateSudoku = (difficulty = \"easy\") => {\n  const puzzle = Array(9).fill(0).map(() => Array(9).fill(0));\n  let attempts;\n  if (difficulty === \"easy\") attempts = 30;else if (difficulty === \"medium\") attempts = 20;else attempts = 10; // hard\n\n  while (attempts > 0) {\n    const row = Math.floor(Math.random() * 9);\n    const col = Math.floor(Math.random() * 9);\n    const num = Math.floor(Math.random() * 9) + 1;\n    if (isSafe(puzzle, row, col, num)) {\n      puzzle[row][col] = num;\n      attempts--;\n    }\n  }\n  const fixedCells = puzzle.map(row => row.map(val => val !== 0));\n  return {\n    puzzle,\n    fixedCells\n  };\n};\nfunction App() {\n  _s();\n  const initial = generateSudoku();\n  const [grid, setGrid] = useState(initial.puzzle);\n  const [fixedCells, setFixedCells] = useState(initial.fixedCells);\n  const [hintsLeft, setHintsLeft] = useState(3);\n  const [difficulty, setDifficulty] = useState(\"easy\");\n\n  // Timer states\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    if (isRunning) {\n      timerRef.current = setInterval(() => {\n        setTime(prev => prev + 1);\n      }, 1000);\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n    };\n  }, [isRunning]);\n  useEffect(() => {\n    setTime(0);\n    setIsRunning(false);\n  }, [grid, difficulty]);\n  const handleChange = (e, row, col) => {\n    if (fixedCells[row][col]) return;\n    const val = e.target.value;\n    if (val === \"\" || /^[1-9]$/.test(val) && val.length === 1) {\n      const newGrid = grid.map(r => r.slice());\n      newGrid[row][col] = val === \"\" ? 0 : parseInt(val);\n      setGrid(newGrid);\n    }\n  };\n  const loadNewPuzzle = () => {\n    const newPuzzle = generateSudoku(difficulty);\n    setGrid(newPuzzle.puzzle);\n    setFixedCells(newPuzzle.fixedCells);\n    setHintsLeft(3);\n  };\n  const loadBlankPuzzle = () => {\n    const blankGrid = Array(9).fill(0).map(() => Array(9).fill(0));\n    const blankFixed = Array(9).fill(0).map(() => Array(9).fill(false));\n    setGrid(blankGrid);\n    setFixedCells(blankFixed);\n    setHintsLeft(3);\n  };\n  const solveCurrentPuzzle = () => {\n    const copyGrid = grid.map(r => r.slice());\n    const solved = solveSudoku(copyGrid);\n    if (solved) setGrid(solved);else alert(\"No solution found!\");\n  };\n  const giveHint = () => {\n    if (hintsLeft === 0) {\n      alert(\"No hints left!\");\n      return;\n    }\n    const copyGrid = grid.map(r => r.slice());\n    const solved = solveSudoku(copyGrid);\n    if (!solved) {\n      alert(\"No solution found to provide hints!\");\n      return;\n    }\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (grid[row][col] === 0) {\n          const newGrid = grid.map(r => r.slice());\n          newGrid[row][col] = solved[row][col];\n          setGrid(newGrid);\n          setHintsLeft(hintsLeft - 1);\n          return;\n        }\n      }\n    }\n    alert(\"No empty cells to give hints!\");\n  };\n  const formatTime = seconds => {\n    const m = Math.floor(seconds / 60).toString().padStart(2, \"0\");\n    const s = (seconds % 60).toString().padStart(2, \"0\");\n    return `${m}:${s}`;\n  };\n  const isCellWrong = (row, col) => {\n    if (grid[row][col] === 0) return false;\n    const val = grid[row][col];\n    for (let i = 0; i < 9; i++) {\n      if (i !== col && grid[row][i] === val) return true;\n      if (i !== row && grid[i][col] === val) return true;\n    }\n    const boxRow = 3 * Math.floor(row / 3);\n    const boxCol = 3 * Math.floor(col / 3);\n    for (let r = boxRow; r < boxRow + 3; r++) {\n      for (let c = boxCol; c < boxCol + 3; c++) {\n        if ((r !== row || c !== col) && grid[r][c] === val) return true;\n      }\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"30px\",\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: \"1\",\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sudoku-grid\",\n          style: {\n            marginTop: \"20px\"\n          },\n          children: grid.map((row, rIdx) => row.map((val, cIdx) => {\n            const isFixed = fixedCells[rIdx][cIdx];\n            const wrong = !isFixed && isCellWrong(rIdx, cIdx);\n            const extraBorders = [rIdx % 3 === 0 ? \"thick-top\" : \"\", cIdx % 3 === 0 ? \"thick-left\" : \"\", rIdx === 8 ? \"thick-bottom\" : \"\", cIdx === 8 ? \"thick-right\" : \"\"].join(\" \");\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `cell ${isFixed ? \"fixed\" : \"\"} ${extraBorders} ${wrong ? \"wrong\" : \"\"}`,\n              maxLength: \"1\",\n              value: val === 0 ? \"\" : val,\n              onChange: e => handleChange(e, rIdx, cIdx),\n              type: \"text\",\n              inputMode: \"numeric\",\n              pattern: \"[1-9]*\",\n              disabled: isFixed,\n              autoComplete: \"off\"\n            }, `${rIdx}-${cIdx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: \"1\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-start\",\n          gap: \"30px\",\n          paddingTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            width: \"100%\",\n            height: \"40px\",\n            fontSize: \"1rem\",\n            padding: \"5px 10px\"\n          },\n          value: difficulty,\n          onChange: e => {\n            setDifficulty(e.target.value);\n            const newPuzzle = generateSudoku(e.target.value);\n            setGrid(newPuzzle.puzzle);\n            setFixedCells(newPuzzle.fixedCells);\n            setHintsLeft(3);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"1fr 1fr\",\n            gridGap: \"15px\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: loadNewPuzzle,\n            style: {\n              height: \"50px\"\n            },\n            children: \"New Puzzle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: loadBlankPuzzle,\n            style: {\n              height: \"50px\"\n            },\n            children: \"Load Blank Puzzle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: giveHint,\n            style: {\n              height: \"50px\"\n            },\n            children: [\"Hint (\", hintsLeft, \" left)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: solveCurrentPuzzle,\n            style: {\n              height: \"50px\"\n            },\n            children: \"Solve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"auto\",\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"2rem\",\n              textAlign: \"center\",\n              fontWeight: \"bold\",\n              userSelect: \"none\"\n            },\n            children: formatTime(time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              gap: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsRunning(true),\n              disabled: isRunning,\n              style: {\n                flex: 1,\n                height: \"40px\"\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsRunning(false),\n              disabled: !isRunning,\n              style: {\n                flex: 1,\n                height: \"40px\"\n              },\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setIsRunning(false);\n                setTime(0);\n              },\n              style: {\n                flex: 1,\n                height: \"40px\"\n              },\n              children: \"Reset Timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PXW2boYUY9tlFjN+10+/SAFXZkk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","isSafe","grid","row","col","num","i","boxRow","Math","floor","boxCol","solveSudoku","isValid","solve","generateSudoku","difficulty","puzzle","Array","fill","map","attempts","random","fixedCells","val","App","_s","initial","setGrid","setFixedCells","hintsLeft","setHintsLeft","setDifficulty","time","setTime","isRunning","setIsRunning","timerRef","current","setInterval","prev","clearInterval","handleChange","e","target","value","test","length","newGrid","r","slice","parseInt","loadNewPuzzle","newPuzzle","loadBlankPuzzle","blankGrid","blankFixed","solveCurrentPuzzle","copyGrid","solved","alert","giveHint","formatTime","seconds","m","toString","padStart","s","isCellWrong","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","width","height","minHeight","flex","justifyContent","marginTop","rIdx","cIdx","isFixed","wrong","extraBorders","join","maxLength","onChange","type","inputMode","pattern","disabled","autoComplete","flexDirection","paddingTop","fontSize","padding","gridTemplateColumns","gridGap","onClick","textAlign","fontWeight","userSelect","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/sudoku_solver/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst isSafe = (grid, row, col, num) => {\r\n  if (grid[row][col] !== 0) return false;\r\n  for (let i = 0; i < 9; i++) {\r\n    if (grid[row][i] === num || grid[i][col] === num) return false;\r\n    const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n    const boxCol = 3 * Math.floor(col / 3) + i % 3;\r\n    if (grid[boxRow][boxCol] === num) return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst solveSudoku = (grid) => {\r\n  const isValid = (row, col, num) => {\r\n    for (let i = 0; i < 9; i++) {\r\n      if (grid[row][i] === num || grid[i][col] === num) return false;\r\n      const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n      const boxCol = 3 * Math.floor(col / 3) + i % 3;\r\n      if (grid[boxRow][boxCol] === num) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const solve = () => {\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        if (grid[row][col] === 0) {\r\n          for (let num = 1; num <= 9; num++) {\r\n            if (isValid(row, col, num)) {\r\n              grid[row][col] = num;\r\n              if (solve()) return true;\r\n              grid[row][col] = 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  return solve() ? grid : null;\r\n};\r\n\r\nconst generateSudoku = (difficulty = \"easy\") => {\r\n  const puzzle = Array(9)\r\n    .fill(0)\r\n    .map(() => Array(9).fill(0));\r\n\r\n  let attempts;\r\n  if (difficulty === \"easy\") attempts = 30;\r\n  else if (difficulty === \"medium\") attempts = 20;\r\n  else attempts = 10; // hard\r\n\r\n  while (attempts > 0) {\r\n    const row = Math.floor(Math.random() * 9);\r\n    const col = Math.floor(Math.random() * 9);\r\n    const num = Math.floor(Math.random() * 9) + 1;\r\n    if (isSafe(puzzle, row, col, num)) {\r\n      puzzle[row][col] = num;\r\n      attempts--;\r\n    }\r\n  }\r\n  const fixedCells = puzzle.map(row => row.map(val => val !== 0));\r\n  return { puzzle, fixedCells };\r\n};\r\n\r\nfunction App() {\r\n  const initial = generateSudoku();\r\n  const [grid, setGrid] = useState(initial.puzzle);\r\n  const [fixedCells, setFixedCells] = useState(initial.fixedCells);\r\n  const [hintsLeft, setHintsLeft] = useState(3);\r\n  const [difficulty, setDifficulty] = useState(\"easy\");\r\n\r\n  // Timer states\r\n  const [time, setTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      timerRef.current = setInterval(() => {\r\n        setTime(prev => prev + 1);\r\n      }, 1000);\r\n    } else {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    }\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [isRunning]);\r\n\r\n  useEffect(() => {\r\n    setTime(0);\r\n    setIsRunning(false);\r\n  }, [grid, difficulty]);\r\n\r\n  const handleChange = (e, row, col) => {\r\n    if (fixedCells[row][col]) return;\r\n\r\n    const val = e.target.value;\r\n    if (val === \"\" || (/^[1-9]$/.test(val) && val.length === 1)) {\r\n      const newGrid = grid.map(r => r.slice());\r\n      newGrid[row][col] = val === \"\" ? 0 : parseInt(val);\r\n      setGrid(newGrid);\r\n    }\r\n  };\r\n\r\n  const loadNewPuzzle = () => {\r\n    const newPuzzle = generateSudoku(difficulty);\r\n    setGrid(newPuzzle.puzzle);\r\n    setFixedCells(newPuzzle.fixedCells);\r\n    setHintsLeft(3);\r\n  };\r\n\r\n  const loadBlankPuzzle = () => {\r\n    const blankGrid = Array(9)\r\n      .fill(0)\r\n      .map(() => Array(9).fill(0));\r\n    const blankFixed = Array(9)\r\n      .fill(0)\r\n      .map(() => Array(9).fill(false));\r\n    setGrid(blankGrid);\r\n    setFixedCells(blankFixed);\r\n    setHintsLeft(3);\r\n  };\r\n\r\n  const solveCurrentPuzzle = () => {\r\n    const copyGrid = grid.map(r => r.slice());\r\n    const solved = solveSudoku(copyGrid);\r\n    if (solved) setGrid(solved);\r\n    else alert(\"No solution found!\");\r\n  };\r\n\r\n  const giveHint = () => {\r\n    if (hintsLeft === 0) {\r\n      alert(\"No hints left!\");\r\n      return;\r\n    }\r\n    const copyGrid = grid.map(r => r.slice());\r\n    const solved = solveSudoku(copyGrid);\r\n    if (!solved) {\r\n      alert(\"No solution found to provide hints!\");\r\n      return;\r\n    }\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        if (grid[row][col] === 0) {\r\n          const newGrid = grid.map(r => r.slice());\r\n          newGrid[row][col] = solved[row][col];\r\n          setGrid(newGrid);\r\n          setHintsLeft(hintsLeft - 1);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    alert(\"No empty cells to give hints!\");\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const m = Math.floor(seconds / 60).toString().padStart(2, \"0\");\r\n    const s = (seconds % 60).toString().padStart(2, \"0\");\r\n    return `${m}:${s}`;\r\n  };\r\n\r\n  const isCellWrong = (row, col) => {\r\n    if (grid[row][col] === 0) return false;\r\n    const val = grid[row][col];\r\n    for (let i = 0; i < 9; i++) {\r\n      if (i !== col && grid[row][i] === val) return true;\r\n      if (i !== row && grid[i][col] === val) return true;\r\n    }\r\n    const boxRow = 3 * Math.floor(row / 3);\r\n    const boxCol = 3 * Math.floor(col / 3);\r\n    for (let r = boxRow; r < boxRow + 3; r++) {\r\n      for (let c = boxCol; c < boxCol + 3; c++) {\r\n        if ((r !== row || c !== col) && grid[r][c] === val) return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Sudoku</h1>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          gap: \"30px\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          minHeight: \"600px\",\r\n        }}\r\n      >\r\n        {/* Left half - Sudoku grid */}\r\n        <div style={{ flex: \"1\", display: \"flex\", justifyContent: \"center\" }}>\r\n          <div className=\"sudoku-grid\" style={{ marginTop: \"20px\" }}>\r\n            {grid.map((row, rIdx) =>\r\n              row.map((val, cIdx) => {\r\n                const isFixed = fixedCells[rIdx][cIdx];\r\n                const wrong = !isFixed && isCellWrong(rIdx, cIdx);\r\n\r\n                const extraBorders = [\r\n                  rIdx % 3 === 0 ? \"thick-top\" : \"\",\r\n                  cIdx % 3 === 0 ? \"thick-left\" : \"\",\r\n                  rIdx === 8 ? \"thick-bottom\" : \"\",\r\n                  cIdx === 8 ? \"thick-right\" : \"\"\r\n                ].join(\" \");\r\n\r\n                return (\r\n                  <input\r\n                    key={`${rIdx}-${cIdx}`}\r\n                    className={`cell ${isFixed ? \"fixed\" : \"\"} ${extraBorders} ${\r\n                      wrong ? \"wrong\" : \"\"\r\n                    }`}\r\n                    maxLength=\"1\"\r\n                    value={val === 0 ? \"\" : val}\r\n                    onChange={(e) => handleChange(e, rIdx, cIdx)}\r\n                    type=\"text\"\r\n                    inputMode=\"numeric\"\r\n                    pattern=\"[1-9]*\"\r\n                    disabled={isFixed}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right half - controls */}\r\n        <div\r\n          style={{\r\n            flex: \"1\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            gap: \"30px\",\r\n            paddingTop: \"20px\",\r\n          }}\r\n        >\r\n          {/* Difficulty selector - full width */}\r\n          <select\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"40px\",\r\n              fontSize: \"1rem\",\r\n              padding: \"5px 10px\",\r\n            }}\r\n            value={difficulty}\r\n            onChange={(e) => {\r\n              setDifficulty(e.target.value);\r\n              const newPuzzle = generateSudoku(e.target.value);\r\n              setGrid(newPuzzle.puzzle);\r\n              setFixedCells(newPuzzle.fixedCells);\r\n              setHintsLeft(3);\r\n            }}\r\n          >\r\n            <option value=\"easy\">Easy</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"hard\">Hard</option>\r\n          </select>\r\n\r\n          {/* Buttons 2x2 grid */}\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr 1fr\",\r\n              gridGap: \"15px\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button onClick={loadNewPuzzle} style={{ height: \"50px\" }}>\r\n              New Puzzle\r\n            </button>\r\n            <button onClick={loadBlankPuzzle} style={{ height: \"50px\" }}>\r\n              Load Blank Puzzle\r\n            </button>\r\n            <button onClick={giveHint} style={{ height: \"50px\" }}>\r\n              Hint ({hintsLeft} left)\r\n            </button>\r\n            <button onClick={solveCurrentPuzzle} style={{ height: \"50px\" }}>\r\n              Solve\r\n            </button>\r\n          </div>\r\n\r\n          {/* Timer area - full width */}\r\n          <div\r\n            style={{\r\n              marginTop: \"auto\",\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: \"10px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontSize: \"2rem\",\r\n                textAlign: \"center\",\r\n                fontWeight: \"bold\",\r\n                userSelect: \"none\",\r\n              }}\r\n            >\r\n              {formatTime(time)}\r\n            </div>\r\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n              <button\r\n                onClick={() => setIsRunning(true)}\r\n                disabled={isRunning}\r\n                style={{ flex: 1, height: \"40px\" }}\r\n              >\r\n                Start\r\n              </button>\r\n              <button\r\n                onClick={() => setIsRunning(false)}\r\n                disabled={!isRunning}\r\n                style={{ flex: 1, height: \"40px\" }}\r\n              >\r\n                Stop\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setIsRunning(false);\r\n                  setTime(0);\r\n                }}\r\n                style={{ flex: 1, height: \"40px\" }}\r\n              >\r\n                Reset Timer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}