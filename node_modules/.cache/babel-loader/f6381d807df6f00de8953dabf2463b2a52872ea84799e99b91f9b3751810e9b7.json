{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\sudoku_solver\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { generateSudoku, solveSudoku } from './sudokuUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [grid, setGrid] = useState(generateSudoku());\n  const [originalGrid, setOriginalGrid] = useState([]);\n  useEffect(() => {\n    setOriginalGrid(JSON.parse(JSON.stringify(grid)));\n  }, []);\n  const handleInput = (row, col, value) => {\n    if (originalGrid[row][col] !== 0) return;\n    const newGrid = [...grid];\n    newGrid[row][col] = value === '' ? 0 : parseInt(value) || 0;\n    setGrid(newGrid);\n  };\n  const handleSolve = () => {\n    const solvedGrid = solveSudoku(JSON.parse(JSON.stringify(grid)));\n    if (solvedGrid) setGrid(solvedGrid);\n  };\n  const handleClear = () => {\n    setGrid(Array(9).fill().map(() => Array(9).fill(0)));\n    setOriginalGrid(Array(9).fill().map(() => Array(9).fill(0)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sudoku Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku-grid\",\n      children: grid.map((row, i) => row.map((num, j) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"1\",\n        value: num === 0 ? '' : num,\n        onChange: e => handleInput(i, j, e.target.value),\n        className: `cell ${originalGrid[i][j] !== 0 ? 'readonly' : ''}`\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        children: \"Load Puzzle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSolve,\n        children: \"Solve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ERk1nEuxcDDNY20cBI/DmS9mxhc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","generateSudoku","solveSudoku","jsxDEV","_jsxDEV","App","_s","grid","setGrid","originalGrid","setOriginalGrid","JSON","parse","stringify","handleInput","row","col","value","newGrid","parseInt","handleSolve","solvedGrid","handleClear","Array","fill","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","i","num","j","type","maxLength","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/sudoku_solver/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { generateSudoku, solveSudoku } from './sudokuUtils';\r\n\r\nfunction App() {\r\n  const [grid, setGrid] = useState(generateSudoku());\r\n  const [originalGrid, setOriginalGrid] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOriginalGrid(JSON.parse(JSON.stringify(grid)));\r\n  }, []);\r\n\r\n  const handleInput = (row, col, value) => {\r\n    if (originalGrid[row][col] !== 0) return;\r\n    const newGrid = [...grid];\r\n    newGrid[row][col] = value === '' ? 0 : parseInt(value) || 0;\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  const handleSolve = () => {\r\n    const solvedGrid = solveSudoku(JSON.parse(JSON.stringify(grid)));\r\n    if (solvedGrid) setGrid(solvedGrid);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setGrid(Array(9).fill().map(() => Array(9).fill(0)));\r\n    setOriginalGrid(Array(9).fill().map(() => Array(9).fill(0)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Sudoku Solver</h1>\r\n      <div className=\"sudoku-grid\">\r\n        {grid.map((row, i) =>\r\n          row.map((num, j) => (\r\n            <input\r\n              key={`${i}-${j}`}\r\n              type=\"text\"\r\n              maxLength=\"1\"\r\n              value={num === 0 ? '' : num}\r\n              onChange={(e) => handleInput(i, j, e.target.value)}\r\n              className={`cell ${originalGrid[i][j] !== 0 ? 'readonly' : ''}`}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button onClick={handleClear}>Load Puzzle</button>\r\n        <button onClick={handleSolve}>Solve</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}