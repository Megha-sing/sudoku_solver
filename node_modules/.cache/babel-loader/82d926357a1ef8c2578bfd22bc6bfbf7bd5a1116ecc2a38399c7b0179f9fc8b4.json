{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\sudoku_solver\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isSafe = (grid, row, col, num) => {\n  if (grid[row][col] !== 0) return false;\n  for (let i = 0; i < 9; i++) {\n    if (grid[row][i] === num || grid[i][col] === num) return false;\n    const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n    const boxCol = 3 * Math.floor(col / 3) + i % 3;\n    if (grid[boxRow][boxCol] === num) return false;\n  }\n  return true;\n};\nconst solveSudoku = grid => {\n  const isValid = (row, col, num) => {\n    for (let i = 0; i < 9; i++) {\n      if (grid[row][i] === num || grid[i][col] === num) return false;\n      const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n      const boxCol = 3 * Math.floor(col / 3) + i % 3;\n      if (grid[boxRow][boxCol] === num) return false;\n    }\n    return true;\n  };\n  const solve = () => {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (grid[row][col] === 0) {\n          for (let num = 1; num <= 9; num++) {\n            if (isValid(row, col, num)) {\n              grid[row][col] = num;\n              if (solve()) return true;\n              grid[row][col] = 0;\n            }\n          }\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  return solve() ? grid : null;\n};\nconst generateSudoku = (difficulty = \"easy\") => {\n  const puzzle = Array(9).fill(0).map(() => Array(9).fill(0));\n  let attempts;\n  if (difficulty === \"easy\") attempts = 30;else if (difficulty === \"medium\") attempts = 20;else attempts = 10;\n  while (attempts > 0) {\n    const row = Math.floor(Math.random() * 9);\n    const col = Math.floor(Math.random() * 9);\n    const num = Math.floor(Math.random() * 9) + 1;\n    if (isSafe(puzzle, row, col, num)) {\n      puzzle[row][col] = num;\n      attempts--;\n    }\n  }\n  const fixedCells = puzzle.map(row => row.map(val => val !== 0));\n  return {\n    puzzle,\n    fixedCells\n  };\n};\nfunction App() {\n  _s();\n  const initial = generateSudoku();\n  const [grid, setGrid] = useState(initial.puzzle);\n  const [fixedCells, setFixedCells] = useState(initial.fixedCells);\n  const [hintsLeft, setHintsLeft] = useState(3);\n  const [difficulty, setDifficulty] = useState(\"easy\");\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    if (isRunning) {\n      timerRef.current = setInterval(() => {\n        setTime(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n    return () => clearInterval(timerRef.current);\n  }, [isRunning]);\n  useEffect(() => {\n    setTime(0);\n    setIsRunning(false);\n  }, [grid, difficulty]);\n  const handleChange = (e, row, col) => {\n    if (fixedCells[row][col]) return;\n    const val = e.target.value;\n    if (val === \"\" || /^[1-9]$/.test(val) && val.length === 1) {\n      const newGrid = grid.map(r => r.slice());\n      newGrid[row][col] = val === \"\" ? 0 : parseInt(val);\n      setGrid(newGrid);\n    }\n  };\n  const loadNewPuzzle = () => {\n    const newPuzzle = generateSudoku(difficulty);\n    setGrid(newPuzzle.puzzle);\n    setFixedCells(newPuzzle.fixedCells);\n    setHintsLeft(3);\n  };\n  const loadBlankPuzzle = () => {\n    const blankGrid = Array(9).fill(0).map(() => Array(9).fill(0));\n    const blankFixed = Array(9).fill(0).map(() => Array(9).fill(false));\n    setGrid(blankGrid);\n    setFixedCells(blankFixed);\n    setHintsLeft(3);\n  };\n  const solveCurrentPuzzle = () => {\n    const copyGrid = grid.map(r => r.slice());\n    const solved = solveSudoku(copyGrid);\n    if (solved) setGrid(solved);else alert(\"No solution found!\");\n  };\n  const giveHint = () => {\n    if (hintsLeft === 0) {\n      alert(\"No hints left!\");\n      return;\n    }\n    const copyGrid = grid.map(r => r.slice());\n    const solved = solveSudoku(copyGrid);\n    if (!solved) {\n      alert(\"No solution found to provide hints!\");\n      return;\n    }\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (grid[row][col] === 0) {\n          const newGrid = grid.map(r => r.slice());\n          newGrid[row][col] = solved[row][col];\n          setGrid(newGrid);\n          setHintsLeft(hintsLeft - 1);\n          return;\n        }\n      }\n    }\n    alert(\"No empty cells to give hints!\");\n  };\n  const formatTime = seconds => {\n    const m = Math.floor(seconds / 60).toString().padStart(2, \"0\");\n    const s = (seconds % 60).toString().padStart(2, \"0\");\n    return `${m}:${s}`;\n  };\n  const getWrongCells = grid => {\n    const wrongCells = new Set();\n\n    // Rows\n    for (let r = 0; r < 9; r++) {\n      const seen = {};\n      for (let c = 0; c < 9; c++) {\n        const val = grid[r][c];\n        if (val !== 0) {\n          if (seen[val] !== undefined) {\n            wrongCells.add(`${r}-${c}`);\n            wrongCells.add(`${r}-${seen[val]}`);\n          } else {\n            seen[val] = c;\n          }\n        }\n      }\n    }\n\n    // Columns\n    for (let c = 0; c < 9; c++) {\n      const seen = {};\n      for (let r = 0; r < 9; r++) {\n        const val = grid[r][c];\n        if (val !== 0) {\n          if (seen[val] !== undefined) {\n            wrongCells.add(`${r}-${c}`);\n            wrongCells.add(`${seen[val]}-${c}`);\n          } else {\n            seen[val] = r;\n          }\n        }\n      }\n    }\n\n    // Boxes\n    for (let boxRow = 0; boxRow < 3; boxRow++) {\n      for (let boxCol = 0; boxCol < 3; boxCol++) {\n        const seen = {};\n        for (let i = 0; i < 9; i++) {\n          const r = 3 * boxRow + Math.floor(i / 3);\n          const c = 3 * boxCol + i % 3;\n          const val = grid[r][c];\n          if (val !== 0) {\n            if (seen[val]) {\n              wrongCells.add(`${r}-${c}`);\n              wrongCells.add(`${seen[val].r}-${seen[val].c}`);\n            } else {\n              seen[val] = {\n                r,\n                c\n              };\n            }\n          }\n        }\n      }\n    }\n    return wrongCells;\n  };\n  const wrongCells = getWrongCells(grid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"difficulty-select\",\n        children: \"Select Difficulty: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"difficulty-select\",\n        value: difficulty,\n        onChange: e => {\n          setDifficulty(e.target.value);\n          const newPuzzle = generateSudoku(e.target.value);\n          setGrid(newPuzzle.puzzle);\n          setFixedCells(newPuzzle.fixedCells);\n          setHintsLeft(3);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"easy\",\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hard\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku-grid\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: grid.map((row, rIdx) => row.map((val, cIdx) => {\n        const isFixed = fixedCells[rIdx][cIdx];\n        const wrong = !isFixed && wrongCells.has(`${rIdx}-${cIdx}`);\n        const extraBorders = [rIdx % 3 === 0 ? \"thick-top\" : \"\", cIdx % 3 === 0 ? \"thick-left\" : \"\", rIdx === 8 ? \"thick-bottom\" : \"\", cIdx === 8 ? \"thick-right\" : \"\"].join(\" \");\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `cell ${isFixed ? \"fixed\" : \"\"} ${extraBorders} ${wrong ? \"wrong\" : \"\"}`,\n          maxLength: \"1\",\n          value: val === 0 ? \"\" : val,\n          onChange: e => handleChange(e, rIdx, cIdx),\n          type: \"text\",\n          inputMode: \"numeric\",\n          pattern: \"[1-9]*\",\n          disabled: isFixed,\n          autoComplete: \"off\"\n        }, `${rIdx}-${cIdx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadNewPuzzle,\n        children: \"New Puzzle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadBlankPuzzle,\n        children: \"Load Blank Puzzle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: giveHint,\n        children: [\"Hint (\", hintsLeft, \" left)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: solveCurrentPuzzle,\n        children: \"Solve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Timer: \", formatTime(time)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(true),\n        disabled: isRunning,\n        children: \"Start Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(false),\n        disabled: !isRunning,\n        children: \"Stop Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setTime(0);\n          setIsRunning(false);\n        },\n        children: \"Reset Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PXW2boYUY9tlFjN+10+/SAFXZkk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","isSafe","grid","row","col","num","i","boxRow","Math","floor","boxCol","solveSudoku","isValid","solve","generateSudoku","difficulty","puzzle","Array","fill","map","attempts","random","fixedCells","val","App","_s","initial","setGrid","setFixedCells","hintsLeft","setHintsLeft","setDifficulty","time","setTime","isRunning","setIsRunning","timerRef","current","setInterval","prev","clearInterval","handleChange","e","target","value","test","length","newGrid","r","slice","parseInt","loadNewPuzzle","newPuzzle","loadBlankPuzzle","blankGrid","blankFixed","solveCurrentPuzzle","copyGrid","solved","alert","giveHint","formatTime","seconds","m","toString","padStart","s","getWrongCells","wrongCells","Set","seen","c","undefined","add","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","style","marginTop","rIdx","cIdx","isFixed","wrong","has","extraBorders","join","maxLength","type","inputMode","pattern","disabled","autoComplete","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/sudoku_solver/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst isSafe = (grid, row, col, num) => {\r\n  if (grid[row][col] !== 0) return false;\r\n  for (let i = 0; i < 9; i++) {\r\n    if (grid[row][i] === num || grid[i][col] === num) return false;\r\n    const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n    const boxCol = 3 * Math.floor(col / 3) + i % 3;\r\n    if (grid[boxRow][boxCol] === num) return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst solveSudoku = (grid) => {\r\n  const isValid = (row, col, num) => {\r\n    for (let i = 0; i < 9; i++) {\r\n      if (grid[row][i] === num || grid[i][col] === num) return false;\r\n      const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n      const boxCol = 3 * Math.floor(col / 3) + i % 3;\r\n      if (grid[boxRow][boxCol] === num) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const solve = () => {\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        if (grid[row][col] === 0) {\r\n          for (let num = 1; num <= 9; num++) {\r\n            if (isValid(row, col, num)) {\r\n              grid[row][col] = num;\r\n              if (solve()) return true;\r\n              grid[row][col] = 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  return solve() ? grid : null;\r\n};\r\n\r\nconst generateSudoku = (difficulty = \"easy\") => {\r\n  const puzzle = Array(9)\r\n    .fill(0)\r\n    .map(() => Array(9).fill(0));\r\n\r\n  let attempts;\r\n  if (difficulty === \"easy\") attempts = 30;\r\n  else if (difficulty === \"medium\") attempts = 20;\r\n  else attempts = 10;\r\n\r\n  while (attempts > 0) {\r\n    const row = Math.floor(Math.random() * 9);\r\n    const col = Math.floor(Math.random() * 9);\r\n    const num = Math.floor(Math.random() * 9) + 1;\r\n    if (isSafe(puzzle, row, col, num)) {\r\n      puzzle[row][col] = num;\r\n      attempts--;\r\n    }\r\n  }\r\n  const fixedCells = puzzle.map(row => row.map(val => val !== 0));\r\n  return { puzzle, fixedCells };\r\n};\r\n\r\nfunction App() {\r\n  const initial = generateSudoku();\r\n  const [grid, setGrid] = useState(initial.puzzle);\r\n  const [fixedCells, setFixedCells] = useState(initial.fixedCells);\r\n  const [hintsLeft, setHintsLeft] = useState(3);\r\n  const [difficulty, setDifficulty] = useState(\"easy\");\r\n\r\n  const [time, setTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      timerRef.current = setInterval(() => {\r\n        setTime(prev => prev + 1);\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n    return () => clearInterval(timerRef.current);\r\n  }, [isRunning]);\r\n\r\n  useEffect(() => {\r\n    setTime(0);\r\n    setIsRunning(false);\r\n  }, [grid, difficulty]);\r\n\r\n  const handleChange = (e, row, col) => {\r\n    if (fixedCells[row][col]) return;\r\n\r\n    const val = e.target.value;\r\n    if (val === \"\" || (/^[1-9]$/.test(val) && val.length === 1)) {\r\n      const newGrid = grid.map(r => r.slice());\r\n      newGrid[row][col] = val === \"\" ? 0 : parseInt(val);\r\n      setGrid(newGrid);\r\n    }\r\n  };\r\n\r\n  const loadNewPuzzle = () => {\r\n    const newPuzzle = generateSudoku(difficulty);\r\n    setGrid(newPuzzle.puzzle);\r\n    setFixedCells(newPuzzle.fixedCells);\r\n    setHintsLeft(3);\r\n  };\r\n\r\n  const loadBlankPuzzle = () => {\r\n    const blankGrid = Array(9).fill(0).map(() => Array(9).fill(0));\r\n    const blankFixed = Array(9).fill(0).map(() => Array(9).fill(false));\r\n    setGrid(blankGrid);\r\n    setFixedCells(blankFixed);\r\n    setHintsLeft(3);\r\n  };\r\n\r\n  const solveCurrentPuzzle = () => {\r\n    const copyGrid = grid.map(r => r.slice());\r\n    const solved = solveSudoku(copyGrid);\r\n    if (solved) setGrid(solved);\r\n    else alert(\"No solution found!\");\r\n  };\r\n\r\n  const giveHint = () => {\r\n    if (hintsLeft === 0) {\r\n      alert(\"No hints left!\");\r\n      return;\r\n    }\r\n    const copyGrid = grid.map(r => r.slice());\r\n    const solved = solveSudoku(copyGrid);\r\n    if (!solved) {\r\n      alert(\"No solution found to provide hints!\");\r\n      return;\r\n    }\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        if (grid[row][col] === 0) {\r\n          const newGrid = grid.map(r => r.slice());\r\n          newGrid[row][col] = solved[row][col];\r\n          setGrid(newGrid);\r\n          setHintsLeft(hintsLeft - 1);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    alert(\"No empty cells to give hints!\");\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const m = Math.floor(seconds / 60).toString().padStart(2, \"0\");\r\n    const s = (seconds % 60).toString().padStart(2, \"0\");\r\n    return `${m}:${s}`;\r\n  };\r\n\r\n  const getWrongCells = (grid) => {\r\n    const wrongCells = new Set();\r\n\r\n    // Rows\r\n    for (let r = 0; r < 9; r++) {\r\n      const seen = {};\r\n      for (let c = 0; c < 9; c++) {\r\n        const val = grid[r][c];\r\n        if (val !== 0) {\r\n          if (seen[val] !== undefined) {\r\n            wrongCells.add(`${r}-${c}`);\r\n            wrongCells.add(`${r}-${seen[val]}`);\r\n          } else {\r\n            seen[val] = c;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Columns\r\n    for (let c = 0; c < 9; c++) {\r\n      const seen = {};\r\n      for (let r = 0; r < 9; r++) {\r\n        const val = grid[r][c];\r\n        if (val !== 0) {\r\n          if (seen[val] !== undefined) {\r\n            wrongCells.add(`${r}-${c}`);\r\n            wrongCells.add(`${seen[val]}-${c}`);\r\n          } else {\r\n            seen[val] = r;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Boxes\r\n    for (let boxRow = 0; boxRow < 3; boxRow++) {\r\n      for (let boxCol = 0; boxCol < 3; boxCol++) {\r\n        const seen = {};\r\n        for (let i = 0; i < 9; i++) {\r\n          const r = 3 * boxRow + Math.floor(i / 3);\r\n          const c = 3 * boxCol + (i % 3);\r\n          const val = grid[r][c];\r\n          if (val !== 0) {\r\n            if (seen[val]) {\r\n              wrongCells.add(`${r}-${c}`);\r\n              wrongCells.add(`${seen[val].r}-${seen[val].c}`);\r\n            } else {\r\n              seen[val] = { r, c };\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return wrongCells;\r\n  };\r\n\r\n  const wrongCells = getWrongCells(grid);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Sudoku</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"difficulty-select\">Select Difficulty: </label>\r\n        <select\r\n          id=\"difficulty-select\"\r\n          value={difficulty}\r\n          onChange={e => {\r\n            setDifficulty(e.target.value);\r\n            const newPuzzle = generateSudoku(e.target.value);\r\n            setGrid(newPuzzle.puzzle);\r\n            setFixedCells(newPuzzle.fixedCells);\r\n            setHintsLeft(3);\r\n          }}\r\n        >\r\n          <option value=\"easy\">Easy</option>\r\n          <option value=\"medium\">Medium</option>\r\n          <option value=\"hard\">Hard</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"sudoku-grid\" style={{ marginTop: \"20px\" }}>\r\n        {grid.map((row, rIdx) =>\r\n          row.map((val, cIdx) => {\r\n            const isFixed = fixedCells[rIdx][cIdx];\r\n            const wrong = !isFixed && wrongCells.has(`${rIdx}-${cIdx}`);\r\n            const extraBorders = [\r\n              rIdx % 3 === 0 ? \"thick-top\" : \"\",\r\n              cIdx % 3 === 0 ? \"thick-left\" : \"\",\r\n              rIdx === 8 ? \"thick-bottom\" : \"\",\r\n              cIdx === 8 ? \"thick-right\" : \"\"\r\n            ].join(\" \");\r\n\r\n            return (\r\n              <input\r\n                key={`${rIdx}-${cIdx}`}\r\n                className={`cell ${isFixed ? \"fixed\" : \"\"} ${extraBorders} ${wrong ? \"wrong\" : \"\"}`}\r\n                maxLength=\"1\"\r\n                value={val === 0 ? \"\" : val}\r\n                onChange={(e) => handleChange(e, rIdx, cIdx)}\r\n                type=\"text\"\r\n                inputMode=\"numeric\"\r\n                pattern=\"[1-9]*\"\r\n                disabled={isFixed}\r\n                autoComplete=\"off\"\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"buttons\" style={{ marginTop: \"20px\" }}>\r\n        <button onClick={loadNewPuzzle}>New Puzzle</button>\r\n        <button onClick={loadBlankPuzzle}>Load Blank Puzzle</button>\r\n        <button onClick={giveHint}>Hint ({hintsLeft} left)</button>\r\n        <button onClick={solveCurrentPuzzle}>Solve</button>\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <div>Timer: {formatTime(time)}</div>\r\n        <button onClick={() => setIsRunning(true)} disabled={isRunning}>\r\n          Start Timer\r\n        </button>\r\n        <button onClick={() => setIsRunning(false)} disabled={!isRunning}>\r\n          Stop Timer\r\n        </button>\r\n        <button onClick={() => { setTime(0); setIsRunning(false); }}>\r\n          Reset Timer\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}