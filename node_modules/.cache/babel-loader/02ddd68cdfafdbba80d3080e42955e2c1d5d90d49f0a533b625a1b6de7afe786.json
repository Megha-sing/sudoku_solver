{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\sudoku_solver\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Helper function to check if placing a number is valid\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isValid(board, row, col, num) {\n  for (let x = 0; x < 9; x++) {\n    if (board[row][x] === num) return false;\n    if (board[x][col] === num) return false;\n    if (board[3 * Math.floor(row / 3) + Math.floor(x / 3)][3 * Math.floor(col / 3) + x % 3] === num) return false;\n  }\n  return true;\n}\n\n// Solver function (backtracking)\nfunction solveSudoku(board) {\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      if (board[row][col] === 0) {\n        for (let num = 1; num <= 9; num++) {\n          if (isValid(board, row, col, num)) {\n            board[row][col] = num;\n            if (solveSudoku(board)) return true;\n            board[row][col] = 0;\n          }\n        }\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction App() {\n  _s();\n  const emptyBoard = Array(9).fill(0).map(() => Array(9).fill(0));\n  const [board, setBoard] = useState(emptyBoard);\n\n  // Update cell value on input change\n  function handleChange(e, row, col) {\n    let val = parseInt(e.target.value);\n    if (isNaN(val) || val < 1 || val > 9) val = 0; // only digits 1-9 allowed\n    const newBoard = board.map(r => [...r]);\n    newBoard[row][col] = val;\n    setBoard(newBoard);\n  }\n\n  // Solve button handler\n  function handleSolve() {\n    const boardCopy = board.map(r => [...r]);\n    if (solveSudoku(boardCopy)) {\n      setBoard(boardCopy);\n    } else {\n      alert(\"No solution found!\");\n    }\n  }\n\n  // Clear board handler\n  function handleClear() {\n    setBoard(emptyBoard);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sudoku Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        borderCollapse: \"collapse\",\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: board.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((num, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              width: 40,\n              height: 40,\n              textAlign: \"center\",\n              backgroundColor: (Math.floor(i / 3) + Math.floor(j / 3)) % 2 === 0 ? \"#ddd\" : \"#fff\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: \"9\",\n              value: num === 0 ? \"\" : num,\n              onChange: e => handleChange(e, i, j),\n              style: {\n                width: \"100%\",\n                height: \"100%\",\n                textAlign: \"center\",\n                fontSize: 20,\n                border: \"none\",\n                outline: \"none\",\n                backgroundColor: \"transparent\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSolve,\n      style: {\n        marginRight: 10,\n        padding: \"8px 16px\"\n      },\n      children: \"Solve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      style: {\n        padding: \"8px 16px\"\n      },\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7/qo8VnofRNtpG+d2vnbVNr5ztA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","isValid","board","row","col","num","x","Math","floor","solveSudoku","App","_s","emptyBoard","Array","fill","map","setBoard","handleChange","e","val","parseInt","target","value","isNaN","newBoard","r","handleSolve","boardCopy","alert","handleClear","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","borderCollapse","marginBottom","i","j","border","width","height","textAlign","backgroundColor","type","min","max","onChange","fontSize","outline","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/sudoku_solver/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// Helper function to check if placing a number is valid\r\nfunction isValid(board, row, col, num) {\r\n  for (let x = 0; x < 9; x++) {\r\n    if (board[row][x] === num) return false;\r\n    if (board[x][col] === num) return false;\r\n    if (\r\n      board[3 * Math.floor(row / 3) + Math.floor(x / 3)][\r\n        3 * Math.floor(col / 3) + (x % 3)\r\n      ] === num\r\n    )\r\n      return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// Solver function (backtracking)\r\nfunction solveSudoku(board) {\r\n  for (let row = 0; row < 9; row++) {\r\n    for (let col = 0; col < 9; col++) {\r\n      if (board[row][col] === 0) {\r\n        for (let num = 1; num <= 9; num++) {\r\n          if (isValid(board, row, col, num)) {\r\n            board[row][col] = num;\r\n            if (solveSudoku(board)) return true;\r\n            board[row][col] = 0;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction App() {\r\n  const emptyBoard = Array(9)\r\n    .fill(0)\r\n    .map(() => Array(9).fill(0));\r\n\r\n  const [board, setBoard] = useState(emptyBoard);\r\n\r\n  // Update cell value on input change\r\n  function handleChange(e, row, col) {\r\n    let val = parseInt(e.target.value);\r\n    if (isNaN(val) || val < 1 || val > 9) val = 0; // only digits 1-9 allowed\r\n    const newBoard = board.map((r) => [...r]);\r\n    newBoard[row][col] = val;\r\n    setBoard(newBoard);\r\n  }\r\n\r\n  // Solve button handler\r\n  function handleSolve() {\r\n    const boardCopy = board.map((r) => [...r]);\r\n    if (solveSudoku(boardCopy)) {\r\n      setBoard(boardCopy);\r\n    } else {\r\n      alert(\"No solution found!\");\r\n    }\r\n  }\r\n\r\n  // Clear board handler\r\n  function handleClear() {\r\n    setBoard(emptyBoard);\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 20, fontFamily: \"Arial\" }}>\r\n      <h1>Sudoku Solver</h1>\r\n      <table\r\n        style={{\r\n          borderCollapse: \"collapse\",\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        <tbody>\r\n          {board.map((row, i) => (\r\n            <tr key={i}>\r\n              {row.map((num, j) => (\r\n                <td\r\n                  key={j}\r\n                  style={{\r\n                    border:\r\n                      \"1px solid black\",\r\n                    width: 40,\r\n                    height: 40,\r\n                    textAlign: \"center\",\r\n                    backgroundColor:\r\n                      ((Math.floor(i / 3) + Math.floor(j / 3)) % 2 === 0)\r\n                        ? \"#ddd\"\r\n                        : \"#fff\",\r\n                  }}\r\n                >\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"9\"\r\n                    value={num === 0 ? \"\" : num}\r\n                    onChange={(e) => handleChange(e, i, j)}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      textAlign: \"center\",\r\n                      fontSize: 20,\r\n                      border: \"none\",\r\n                      outline: \"none\",\r\n                      backgroundColor: \"transparent\",\r\n                    }}\r\n                  />\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={handleSolve} style={{ marginRight: 10, padding: \"8px 16px\" }}>\r\n        Solve\r\n      </button>\r\n      <button onClick={handleClear} style={{ padding: \"8px 16px\" }}>\r\n        Clear\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}