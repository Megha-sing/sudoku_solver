{"ast":null,"code":"// Generates a simple puzzle with some cells filled\nexport const generateSudoku = () => {\n  const puzzle = Array(9).fill().map(() => Array(9).fill(0));\n  for (let i = 0; i < 15; i++) {\n    const row = Math.floor(Math.random() * 9);\n    const col = Math.floor(Math.random() * 9);\n    const num = Math.floor(Math.random() * 9) + 1;\n    if (isSafe(puzzle, row, col, num)) puzzle[row][col] = num;\n  }\n  return puzzle;\n};\n\n// Solves the given Sudoku grid\nexport const solveSudoku = grid => {\n  const isValid = (row, col, num) => {\n    for (let i = 0; i < 9; i++) {\n      if (grid[row][i] === num || grid[i][col] === num) return false;\n      const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n      const boxCol = 3 * Math.floor(col / 3) + i % 3;\n      if (grid[boxRow][boxCol] === num) return false;\n    }\n    return true;\n  };\n  const solve = () => {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (grid[row][col] === 0) {\n          for (let num = 1; num <= 9; num++) {\n            if (isValid(row, col, num)) {\n              grid[row][col] = num;\n              if (solve()) return true;\n              grid[row][col] = 0;\n            }\n          }\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  return solve() ? grid : null;\n};\nconst isSafe = (grid, row, col, num) => {\n  if (grid[row][col] !== 0) return false;\n  for (let i = 0; i < 9; i++) {\n    if (grid[row][i] === num || grid[i][col] === num) return false;\n    const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n    const boxCol = 3 * Math.floor(col / 3) + i % 3;\n    if (grid[boxRow][boxCol] === num) return false;\n  }\n  return true;\n};","map":{"version":3,"names":["generateSudoku","puzzle","Array","fill","map","i","row","Math","floor","random","col","num","isSafe","solveSudoku","grid","isValid","boxRow","boxCol","solve"],"sources":["C:/Users/Admin/Desktop/sudoku_solver/src/sudokuUtils.js"],"sourcesContent":["// Generates a simple puzzle with some cells filled\r\nexport const generateSudoku = () => {\r\n  const puzzle = Array(9).fill().map(() => Array(9).fill(0));\r\n  for (let i = 0; i < 15; i++) {\r\n    const row = Math.floor(Math.random() * 9);\r\n    const col = Math.floor(Math.random() * 9);\r\n    const num = Math.floor(Math.random() * 9) + 1;\r\n    if (isSafe(puzzle, row, col, num)) puzzle[row][col] = num;\r\n  }\r\n  return puzzle;\r\n};\r\n\r\n// Solves the given Sudoku grid\r\nexport const solveSudoku = (grid) => {\r\n  const isValid = (row, col, num) => {\r\n    for (let i = 0; i < 9; i++) {\r\n      if (grid[row][i] === num || grid[i][col] === num) return false;\r\n      const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n      const boxCol = 3 * Math.floor(col / 3) + i % 3;\r\n      if (grid[boxRow][boxCol] === num) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const solve = () => {\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        if (grid[row][col] === 0) {\r\n          for (let num = 1; num <= 9; num++) {\r\n            if (isValid(row, col, num)) {\r\n              grid[row][col] = num;\r\n              if (solve()) return true;\r\n              grid[row][col] = 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  return solve() ? grid : null;\r\n};\r\n\r\nconst isSafe = (grid, row, col, num) => {\r\n  if (grid[row][col] !== 0) return false;\r\n  for (let i = 0; i < 9; i++) {\r\n    if (grid[row][i] === num || grid[i][col] === num) return false;\r\n    const boxRow = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n    const boxCol = 3 * Math.floor(col / 3) + i % 3;\r\n    if (grid[boxRow][boxCol] === num) return false;\r\n  }\r\n  return true;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}